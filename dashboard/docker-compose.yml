services:
  # Flask annotation app
  annotation-app:
    build:
      context: ../tools/annotation
      dockerfile: Dockerfile
      args:
        UID: ${PUID:-10000}
        GID: ${PGID:-10000}
    container_name: crplayer-annotation
    ports:
      - "5000:5000"
    volumes:
      - ../data:/app/data:rw
      - ../research/screen-page-classification:/app/research/screen-page-classification:ro
    environment:
      - FLASK_ENV=development
      - FLASK_HOST=0.0.0.0
      - FLASK_PORT=5000
      # Propagate current host user's UID/GID so files created in bind mounts aren't owned by root
      - PUID=${PUID:-10000}
      - PGID=${PGID:-10000}
      # GPU environment variables
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
    networks:
      - crplayer-net
    restart: unless-stopped
    # Enable GPU runtime
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/sessions"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: crplayer-dashboard
    ports:
      - "8080:80"
    volumes:
      - ./nginx-compose.conf:/etc/nginx/conf.d/default.conf:ro
      - ./static:/usr/share/nginx/html:ro
    depends_on:
      - annotation-app
    networks:
      - crplayer-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  crplayer-net:
    driver: bridge
    name: crplayer-dashboard-net
